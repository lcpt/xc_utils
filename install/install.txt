xc_utils installation.

0.- Patience (please).

    Itâ€™s not always easy to verify than installation works properly
    (obviously the developer's machine is the worst place to test
    installation process). If you find a bug in the installation please 
    feel free to add an issue at https://github.com/xcfem/xc_utils/issues.

1.- Pre-requisites.

    xc_utils is a C++ (and fortran) library, so a C++ and a Fortran
    compiler are necessary. You can use the library as a Python module
    so you need a Python interpreter too. The library was tested
    with GNU C++ and Fortran version 4.8.2


    - You will also need CMake ((http://www.cmake.org/).
    - The library is supposed to be used over Linux, maybe it's possible
      to use it with other Unix flavours.
    - Libraries needed:

         * Libraries you must to download from GitHub and install yourself:
	 
             -xc_basic: basic routines (download it from https://github.com/xcfem/xc_basic).
	     
	 * Libraries that can be installed from OS packages.

	     -Boost c++ libraries (<http://www.boost.org/>).
	     -xc_basic (must be previously installed xc_basic.tar.gz).
	     -CImg C++ Template Image Processing Toolkit (cimg-dev).
	     -CGAL computational geometry algorithms library <http://www.cgal.org/> (libcgal-dev).
	     -GNU plotutils libraries (libplot gnuplot).
	     -GLib library (libglib2.0-dev).
	     -Multiprecision arithmetic library developers tools (libgmp3-dev).
	     -GTK GIMP Tookit (libgtk2.0-dev, libgtkgl2.0-dev,
		   libgtkglextmm-x11-1.2-dev, libgtkmm-2.4-dev).
	     -GNU Triangulated Surface Library (libgts-bin libgts-dev).
	     -Multiple precision floating-point computation developers tools (libmpfr-dev).
	     -MySQL C++ library bindings (libmysql++-dev).
	     -SQLite 3 development files (libsqlite3).
	     -VTK Visualization ToolKit <http://www.vtk.org> (libvtk5-dev).
	     -X11 (libX11-dev).

      You can find a list of the Ubuntu (or Debian) packages you need to
      fulfil the installation in "doc/needed_packages.txt". If you have
      a Debian, Ubuntu or (probably) Linux Mint distribution you can
      run the "doc/install_*whatever*_packages.sh" to install all
      needed packages (*whatever* can be debian, ubuntu16,...).

2.- Make a directory to place files inside (Debian administrators 
    know what to do):

    sudo mkdir /usr/local/src/prgs
    sudo chown yourUserName.yourUserName /usr/local/src/prgs

3.- Unzip the files is "prgs" directory:

    cp xc_utils.tar.gz /usr/local/src/prgs
    cd /usr/local/src/prgs
    tar -xzvf xc_utils.tar.gz

4.- Make a directory to compile sources.

    mkdir /usr/local/src/prgs/build
    mkdir /usr/local/src/prgs/build/xc_utils


6.- Use CMake for Makefile generation.

    cd /usr/local/src/prgs/build/xc_utils
    cmake ../../prgs/xc_utils/src

7.- Compile code.

    make

8.- Install library.

    sudo make install

8.- Verify that in the '/usr/local/lib' there is a file named 'libxc_utils.so'.


9.- Install python modules.

    cd /usr/local/src/prgs/xc_utils/python_modules
    sh local_install.sh

10.- Run verification tests (test that all works as intended).

    cd /usr/local/src/prgs/xc_utils/verif
    follow the instructions in "readme.txt"
